These are some notes from research in git and messing around


Using git:


git add <file or directory wanted>
    In visual studio: >Git: Stage (when file is opened)
        for staging all changes:
            In visual studio >Git: Stage All changes
            In Bash: git add -a
    temporarily holds the files currently looked at by editor or near ls of terminal
    According to documentation, stores a directory into an "Index" abstractly

git commit -m ""
    In Visual Studio: >Git: Commit
    prepares updates to file for repo upload and can notify the github site of this it appears
    According to documentation, stores index contents into what is called a Head

git push
    In visual studio: >Git: Push
    Appears to apply changes to repo on website if able, sometimes an argument of the repo used is required in command line
    Can sometimes need the remote url if connection not established it seems
    According to practice and documentation, pushes head information to remote server and clears the entire 'tree' of data from head to index after

git pull <url>
    In Visual Studio: >Git: Pull
        Visual studio appears to assume current file is pulled to
    Appears to merge from remote to current ls location

git fetch <url>
    In Visual Studio: >Git: fetch
        In VS temporarily opens current version of file
        In command line, appears to produce a copy of the current file pulled at ls location or specified path

Our Source Code, pre-adjustments:
Types file: contains all the objects required for project
    Item class:
        items are stubbed currently, containing no code inside
    Holder class:
        Inventory containers, currently only stubbed
    Player:
        Built-in Holder is given as argument
        Currently creates a Room field without arguments
        No other functionality

    Room:
        Room to be used on map
        Has a parent map field, list of entrances and exits
        Also has a list of players currently inhabiting
        !! As a practice, entrances should only be entereed by players,while exits only 
                only used to be exited by players
    Path:
        Abstractly built to be the connection between a Room's pointers, such as doors
            Contains an entrance and exit Room
    Map:
        Actualy map of rooms in the game, will contain all objects later on
            !! Currently only has a list of room objects

_Init_ File: Appears to only have version tag and author tag to add to program

_Main_: Appears to be the main launching file, running other programs and importing libraries

cli file: According to techtarget.com, is the Command Line Interface file that deals with extra arguments added by command line when starting the program

tests: The code appears to have assertion code for the existance of all object types currently existing
        as well as multiple instance of said objects in runtime.
        There are also tests that the CLI has a -h for help and the CLI exists in general
        



